QPDraw用来在屏幕上绘制棋盘
InfDraw用来绘制屏幕下方那些游戏信息
CurDraw用来绘制光标
DrawWinInf用来在游戏结束时显示那些信息
CPP文件中，
QPInit用来初始化棋盘
SwapUsr用途很简单，输入1返回2，输入2返回1
VStep用来给当前用户的步数加1
NoPlace用来处理因为棋盘满了导致的游戏结束情况
Win用来处理玩家获胜
线程用来处理按键（删掉，内容整合进_tmain中）
在头文件中定义的全局变量和结构
_STRING不是我定义的，是MFC的（删掉）
Pl用来储存玩家信息，PN是玩家名，PS是玩家走棋的步数，PO是玩家当前在棋盘上所拥有的棋子数，SP是玩家当前拥有可以使用特殊技能的次数
P1、P2分别代表那两个用户。。

Cur是光标位置类，成员X,Y，表示坐标，横为X，纵为Y
Cu是表示游戏中当前光标，PP用作临时变量

QiP类是棋盘，Q表示用户棋盘，S表示特殊技能棋盘，QP就是当前棋盘。

Dint表示双int类，只用于BnWGo!.h中，NFound为常量

BnWGo!.h后面都是程序算法，可以使用。。。
其中要调用的是：
ProcQP，处理落子，返回一个棋盘类
CanPlace，返回当前玩家能否落子
CountPlace，计数当前棋盘两个玩家的棋子数
HavePlace，判断当前玩家还有没有地方落子
main中：
NP 是当前玩家
EndOfGame 是标志游戏是否结束
PV 是用来和线程通讯的（可以删了）
EP 是当前棋盘上空的位子计数